version: '3'
services:
    dmg3cproddb:
      image: 'postgres:14.1-alpine'
      container_name: dmg3cproddb
      ports:
        - "${POSTGRES_PORT}:5432"
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB} 
      volumes:
        - ./pgdata:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5
      networks:
        - mynet  
    dmg3cprodapi:
      container_name: dmg3capi-${TAG}
      image: nexus.izserver8.in:8085/dmg3cprodapi:${TAG}
      restart: always
      ports:
        - "${SERVICEPORT}:8080"
      depends_on:
        - dmg3cproddb
      environment:
        - SPRING_DATASOURCE_URL=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
        - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
        - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
        - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      networks:
        - mynet  

    dmgccprodview:
      restart: always
      container_name: dmg3cprodview-${TAG}
      image: nexus.izserver8.in:8085/dmg3cprodview:${TAG}
      ports:
        - '${WEBPORT}:80'
      depends_on:
        - dmg3cprodapi
      networks:
        - mynet   


networks:
  mynet:
    driver: bridge 